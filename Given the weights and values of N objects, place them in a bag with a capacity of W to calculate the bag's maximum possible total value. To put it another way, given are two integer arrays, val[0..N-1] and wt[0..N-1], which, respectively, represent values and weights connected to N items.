#include <stdio.h>
#define MAX_W 1001
#define MAX_N 1001

int max(int a, int b){
	return (a > b) ? a : b;
}

int knapsack(int val[], int wt[], int N, int W){
	int dp[MAX_W] = {0};
	for(int i = 0; i < N; i++){
		for(int w = W; w >= wt[i]; w--){
			dp[w] = max(dp[w], val[i] + dp[w - wt[i]]);
		}
	}
	return dp[W];
}

int main(){
	int N, W;
	int val[MAX_N], wt[MAX_N];

	scanf("%d", &N);
	for(int i = 0; i < N; i++){
		scanf("%d", &val[i]);
	}

	for(int i = 0; i < N; i++){
		scanf("%d", &wt[i]);
	}
	scanf("%d", &W);

	int result = knapsack(val, wt, N, W);
	printf("%d\n", result);

	return 0;
}
